//backed by REST Client 
// ----------------------------------- ATTENTION : KEEP THE FILE CLEAN ---------------

### Check if the app is up
GET {{proto}}://{{host}}:{{port}}/health

### Check non protected API
GET {{proto}}://{{host}}:{{port}}/api/hello

### Check protected API
GET {{proto}}://{{host}}:{{port}}/api/hellosecure
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb21wYW55Ijp7ImlkIjoiNWU5MGFhM2I1OGU3MjI3NmFiOTE1NGQ4In0sImZpcnN0bmFtZSI6IkRpbXV0aHUiLCJsYXN0bmFtZSI6IlNlbmFuYXlha2EiLCJlbWFpbCI6ImRpbTkxMkBnbWFpbC5jb20iLCJwaG9uZW51bWJlciI6Ijg0OTQ0NDc0NCIsImRvbWFpbiI6ImVtcGxveWVyIiwiaWQiOiI1ZTkwYWEzYjU4ZTcyMjc2YWI5MTU0ZDciLCJpYXQiOjE1ODY2MTcxNDl9.5y5oX-9s-gLDHRUup3v3uguc2OvX6BtIkSzY5siuZGk 
content-type: application/json

{
 "name" : "dimu1"
}


### Authntication
POST {{proto}}://{{host}}:{{port}}/api/login
content-type: application/json

{
"email" : "dim912@gmail.com",
"password" : "23423423840",
"domain" : "employer"
}

###
POST {{proto}}://{{host}}:{{port}}/api/login
content-type: application/json

{
"email" : "dim912@gmail.com",
"password" : "dim912@gmail.com",
"domain" : "candidate"
}

###
GET {{proto}}://{{host}}:8080/api/jobadds?q=java&location=kandy&location=colombo&type=contract
content-type: application/json


###
POST {{proto}}://{{host}}:{{port}}/api/jobadds HTTP/1.1
content-type: application/json

{
 "company" : "MIT Sri Lanka",
 "description" : "Job Description\nTo do Application Development\nExperience in Java programming language . Will use SQL (mysql, oracle, etc. ) , Angular js, spring, Hibernate, etc.\nWill handle technical development concepts, latest software tools and technologies, strong database concepts and designing techniques\n\nJob Requirement:\nAble to do development, modification, enhancement and support\nAt least 2 year experience working on Java\/J2EE environments and related technologies.\nInterested applicants may send in their detailed resumes, with subject title: 105 \u2013 Java, CV written in MS Word for immediate processing:\nWe regret that only shortlisted candidates will be notified.\nIT Consultancy & Services Pte Ltd\nVisit our website: www.itcspl.com\nEA License No.: 92C5311",
 "title" : "Senior Java Developr",
 "location" : "Colombo",
 "experiance" : "3 years ",
 "skills" : [ "Angular" , ".Net"] 
}

###
GET {{proto}}://{{host}}:{{port}}/api/meta/metaposteddates?q=

###
GET {{proto}}://{{host}}:{{port}}/api/meta/metacities?q=

###
GET {{proto}}://{{host}}:{{port}}/api/meta/metasectors?q=so HTTP/1.1

###
GET {{proto}}://{{host}}:{{port}}/api/jobadds?q=bank

###
GET {{proto}}://{{host}}:{{port}}/api/jobadds?company=

###
GET {{proto}}://{{host}}:{{port}}/api/autocomplete

###
POST {{proto}}://{{host}}:{{port}}/api/candidateprofile
content-type: application/json

{
  "firstname": "Dimuthu",
  "lastname": "Senanayaka",
  "email": "dim912@gmail.com04",
  "password": "dim912@gmail.com"
}


###
POST {{proto}}://{{host}}:{{port}}/api/employerprofile HTTP/1.1
content-type: application/json

{
  "firstname": "Dimuthu",
  "lastname": "Senanayaka",
  "email": "gorillajobslk111@gmail.com",
  "phonenumber": 849444744,
  "password": 23423423840,
  "companyid": null,
  "company": {
    "name" : "company 112",
    "logo": "logo",
    "email" : "companyemail@company.com112",
    "phonenumber" : "77 234 234 5",
    "description" : "Company Desctiption"
  } 
}


###
GET {{proto}}://{{host}}:{{port}}/api/company?q= HTTP/1.1
content-type: application/json

###

POST {{proto}}://{{host}}:{{port}}/api/HTTP/1.1
content-type: application/json

{
 "company" : "Sampath Bank",
 "title" : "Coparate banker",
 "overview" : "project manager with telecommunication backgroud" ,
 "description" : "looking for a talented coparate banker",
 "location" : "Colombo",
 "experianceMin" : "3.5",
 "experianceMax" : "6.5",
 "type" : "permanent",
 "level" : "Junior",
 "industry" : "Mobilte networks",
 "salaryMin" : "110000",
 "salaryMax" : "130000",
 "bonus" : "100000",
 "bonusType" : "anum",
 "expireDate" : 1598998690472 ,
 "notifyEmail" : "dim912@gmailcom",
 "redirectURL" : "carrers@gorilla.lk",
 "skills" : [ "account handling" , "front desk", "banking", "account"] 
}

############### DIRECT ElasticSearch ########################

###
GET http://206.189.133.87:9200


###
GET http://206.189.133.87:9200/_aliases

###
DELETE http://206.189.133.87:9200/gorilla.jobadds


###
GET http://206.189.133.87:9200/gorilla.jobadds/_search

###
GET http://206.189.133.87:9200/gorilla.jobadds/_search
content-type: application/json

{
  "query": { 
     "multi_match": {
        "query": "bank",
        "fields": ["company", "title", "description", "type"]
     }
  }
}
###
GET http://206.189.133.87:9200/gorilla.jobadds/_search
content-type: application/json
{
  "query": { 
  "bool" : {
    "must": [ 
      {"multi_match" : {
        "query" : "java",
        "fields": ["company", "title", "description"]
        }
      }
    ],
     "filter" : {
         "term": {"type": "permanent"}  
     }
  }
  }
}

####
     "multi_match": {
        "query": "bank",
        "fields": ["company", "title", "description"]
     },

###
GET http://206.189.133.87:9200/gorilla.jobadds
###

GET http://206.189.133.87:9200/gorilla.jobadds/_mapping



###
GET http://206.189.133.87:9200/gorilla.jobadds/_search
content-type: application/json

{
    "size": 10 ,
    "from" : 3
}

###
PUT http://206.189.133.87:9200/gorilla.jobadds


###
GET http://206.189.133.87:9200/_cluster/health?pretty


###
GET http://206.189.133.87:9200/gorilla.jobadds/_termvectors/5e3851713c1e351f0cfe0eef


###
GET http://206.189.133.87:9200/gorilla.jobadds/_doc/5e3851713c1e351f0cfe0eef
###


###
HEAD http://206.189.133.87:9200/gorilla.jobadds/_mapping/company


###

DELETE http://206.189.133.87:9200/gorilla.jobadds/_mapping
content-type: application/json
  
{
      "properties": {
        "company": {
          "type" : "text"
         }
      }
}

###

POST http://206.189.133.87:9200/_reindex
content-type: application/json

{
  "source": {
    "index": "gorilla.jobadds"
  },
  "dest": {
    "index": "gorilla.jobadds_new"
  }
}

###

POST http://206.189.133.87:9200/_analyze
content-type: application/json

{
  "analyzer": "standard",
  "text": "The 2 QUICK Brown-Foxes jumped over the lazy dog's bone."
}

###
PUT http://206.189.133.87:9200/gorilla.autocomplete
content-type: application/json

{
  "settings": {
    "index": {
      "analysis": {
        "filter": {},
        "analyzer": {
          "keyword_analyzer": {
            "filter": [
              "lowercase",
              "asciifolding",
              "trim"
            ],
            "char_filter": [],
            "type": "custom",
            "tokenizer": "keyword"
          },
          "edge_ngram_analyzer": {
            "filter": [
              "lowercase"
            ],
            "tokenizer": "edge_ngram_tokenizer"
          },
          "edge_ngram_search_analyzer": {
            "tokenizer": "lowercase"
          }
        },
        "tokenizer": {
          "edge_ngram_tokenizer": {
            "type": "edge_ngram",
            "min_gram": 2,
            "max_gram": 20,
            "token_chars": [
              "letter"
            ]
          }
        }
      }
    }
  },
  "mappings": {
      "properties": {
        "name": {
          "type": "text",
          "fields": {
            "keywordstring": {
              "type": "text",
              "analyzer": "keyword_analyzer"
            },
            "edgengram": {
              "type": "text",
              "analyzer": "edge_ngram_analyzer",
              "search_analyzer": "edge_ngram_search_analyzer"
            },
            "completion": {
              "type": "completion"
            }
          },
          "analyzer": "standard"
        }
      }
  }
}

###
POST http://206.189.133.87:9200/gorilla.search/_doc/_create
content-type: application/json

{
  "text": "Iron Man"
}

###
POST http://206.189.133.87:9200/gorilla.search/_doc
content-type: application/json

{"name" : "Iron Man"}
###





###
GET http://206.189.133.87:9200/gorilla.search/_search
content-type: application/json



### prefix search
### match only at th biginning of sentense, 
### No need to alter exising index. can be directly apply.( so  no memory foot print)
### not optimized for large datasts
### this is because => ES checks for the matches only at search time. No insert time heavy lifting
#duplicates are not filtered out. To avoid this can aggrigrate results and then filter at the server side

GET http://206.189.133.87:9200/gorilla.jobsearch/_search
content-type: application/json

{
  "query": {
    "prefix": {
      "name.keywordstring": "a"
    }
  }
}


### N grams approach ( this is an improvemnt on prfix search)
### diffrent analyzers at index and search time
### query time -> analyzer with n grams. this first split the sentense by the spaces, comma etc
### then form n-grams tokanizer =>  at the biginning of each word
### search time -> standard analyzer
### can match words at the middle of sentense
### fast in search,  but slow in insert

GET http://206.189.133.87:9200/gorilla.autocomplete/_search
content-type: application/json

{
    "query": {
        "match": {
            "name.edgengram": {
                "query": "soft",
                "fuzziness": 1
            }
        }
    }
}

### Completion suggester
### ES use A inmemory data strucure called finite state transfer ( FST) is used by this
### ES store FST per segmnet level => which is horizontally scalable
### mathcing always starts at the bigging of sentense
### sorting is supported only through weights 


GET http://206.189.133.87:9200/gorilla.jobsearch/_search
content-type: application/json

{
    "suggest": {
        "movie-suggest" : {
            "prefix" : "test",
            "completion" : {
                "field" : "name.completion",
                "fuzzy": {
                   "fuzziness": 1
                 }
            }
        }
    }
}

###

###
GET http://206.189.133.87:9200/gorilla.autocomplete/_search

###
GET http://206.189.133.87:9200/gorilla.autocomplete/

###
GET http://206.189.133.87:9200/gorilla.jobadds/


###
GET http://206.189.133.87:9200/gorilla.autocomplete/_mapping



### Add a new field to an existing mapping
PUT /my-index/_mapping
{
  "properties": {
    "employee-id": {
      "type": "keyword",
      "index": false
    }
  }
}

##view  the mappings of a field
GET /my-index/_mapping/field/employee-id
